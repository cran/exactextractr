// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// CPP_exact_extract
Rcpp::List CPP_exact_extract(Rcpp::S4& rast, const Rcpp::RawVector& wkb);
RcppExport SEXP _exactextractr_CPP_exact_extract(SEXP rastSEXP, SEXP wkbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::S4& >::type rast(rastSEXP);
    Rcpp::traits::input_parameter< const Rcpp::RawVector& >::type wkb(wkbSEXP);
    rcpp_result_gen = Rcpp::wrap(CPP_exact_extract(rast, wkb));
    return rcpp_result_gen;
END_RCPP
}
// CPP_coverage_fraction
Rcpp::S4 CPP_coverage_fraction(Rcpp::S4& rast, const Rcpp::RawVector& wkb, bool crop);
RcppExport SEXP _exactextractr_CPP_coverage_fraction(SEXP rastSEXP, SEXP wkbSEXP, SEXP cropSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::S4& >::type rast(rastSEXP);
    Rcpp::traits::input_parameter< const Rcpp::RawVector& >::type wkb(wkbSEXP);
    Rcpp::traits::input_parameter< bool >::type crop(cropSEXP);
    rcpp_result_gen = Rcpp::wrap(CPP_coverage_fraction(rast, wkb, crop));
    return rcpp_result_gen;
END_RCPP
}
// CPP_stats
Rcpp::NumericVector CPP_stats(Rcpp::S4& rast, const Rcpp::RawVector& wkb, const Rcpp::StringVector& stats, int max_cells_in_memory);
RcppExport SEXP _exactextractr_CPP_stats(SEXP rastSEXP, SEXP wkbSEXP, SEXP statsSEXP, SEXP max_cells_in_memorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::S4& >::type rast(rastSEXP);
    Rcpp::traits::input_parameter< const Rcpp::RawVector& >::type wkb(wkbSEXP);
    Rcpp::traits::input_parameter< const Rcpp::StringVector& >::type stats(statsSEXP);
    Rcpp::traits::input_parameter< int >::type max_cells_in_memory(max_cells_in_memorySEXP);
    rcpp_result_gen = Rcpp::wrap(CPP_stats(rast, wkb, stats, max_cells_in_memory));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_exactextractr_CPP_exact_extract", (DL_FUNC) &_exactextractr_CPP_exact_extract, 2},
    {"_exactextractr_CPP_coverage_fraction", (DL_FUNC) &_exactextractr_CPP_coverage_fraction, 3},
    {"_exactextractr_CPP_stats", (DL_FUNC) &_exactextractr_CPP_stats, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_exactextractr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
